version: 2
jobs:
  build:
    macos:
      xcode: "9.0"

    steps:
      - checkout
      - run:
          name: Debug
          command: |
              ls -R $HOME

      - run:
          name: Install software
          command: |
              brew install go
              export GOPATH=$HOME/go
              go version
              brew install bats
              brew install rust
              curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
              export PATH=$HOME/.cargo/bin:$PATH
              mkdir -p $GOPATH/src/github.com/ethereumproject
              curl -sL https://raw.githubusercontent.com/ethereumproject/janus/master/get.sh | bash
              export PATH=$PATH:$PWD/janusbin

      - run:
          name: Compile SputnikVM-ffi
          command: |
              export GOPATH=$HOME/go
              mv $HOME/project/go-ethereum $GOPATH/src/github.com/etherumproject/
              git clone https://github.com/ethereumproject/sputnikvm-ffi $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi
              cd $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/ffi && cargo build --release
              cp $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/ffi/target/release/libsputnikvm_ffi.a $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/libsputnikvm.a
              export CGO_LDFLAGS="$GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/libsputnikvm.a -ldl -lresolv";

      - run:
          name: Build and run tests
          command: |
              export GOPATH=$HOME/go
              cd $GOPATH/src/github.com/ethereumproject/go-ethereum
              go env
              go test -tags=sputnikvm ./...
              go build -tags=sputnikvm -ldflags "-X main.Version=`janus version -format TAG_OR_NIGHTLY`" ./cmd/geth
              bats cmd/geth
