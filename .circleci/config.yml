version: 2
jobs:
  prepare:
    macos:
      xcode: "9.0"

    environment: 
      GOPATH: $HOME/go
      PATH: $PATH:$HOME/.cargo/bin:$HOME/janusbin

    steps:
      - run:
          name: Prepare directories
          command: mkdir -p $GOPATH/src/github.com/ethereumproject
      - checkout:
          path:  $GOPATH/src/github.com/ethereumproject/go-ethereum
      - run:
          name: Install required software
          command: |
            brew install go
            go version
            brew install bats
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
            curl -sL https://raw.githubusercontent.com/ethereumproject/janus/master/get.sh | bash

  build_sputnik_vm:
    macos:
      xcode: "9.0"

    environment: 
      GOPATH: $HOME/go
      PATH: $PATH:$HOME/.cargo/bin:$HOME/janusbin

    steps:
      - run:
          name: Compile SputnikVM-ffi
          command: |
            git clone https://github.com/ethereumproject/sputnikvm-ffi $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi
            cd $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/ffi && cargo build --release
            cp $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/ffi/target/release/libsputnikvm_ffi.a $GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/libsputnikvm.a

  unit_tests:
    macos:
      xcode: "9.0"

    environment: 
      GOPATH: $HOME/go
      PATH: $PATH:$HOME/.cargo/bin:$HOME/janusbin

    steps:
      - run:
          name: Run unit tests
          command: |
            export CGO_LDFLAGS="$GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/libsputnikvm.a -ldl -lresolv";
            cd $GOPATH/src/github.com/ethereumproject/go-ethereum
            go env
            go test -tags=sputnikvm ./...

  integration_tests:
    macos:
      xcode: "9.0"

    environment: 
      GOPATH: $HOME/go
      PATH: $PATH:$HOME/.cargo/bin:$HOME/janusbin

    steps:
      - run:
          name: Run bats tests
          command: |
            export CGO_LDFLAGS="$GOPATH/src/github.com/ethereumproject/sputnikvm-ffi/c/libsputnikvm.a -ldl -lresolv";
            go install -tags=sputnikvm -ldflags "-X main.Version=`janus version -format TAG_OR_NIGHTLY`" ./cmd/geth
            bats cmd/geth

workflows:
  version: 2
  build_and_test:
    jobs:
      - prepare
      - build_sputnik_vm:
          requires:
            - prepare
      - unit_tests:
          requires:
            - build_sputnik_vm
      - integration_tests:
          requires:
            - build_sputnik_vm
